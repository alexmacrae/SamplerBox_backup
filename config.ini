[README]
; WARNING: Any comments written here will be overwritten by SamplerBox when using the menu system.; Additions and changes to comments must be made to configparser_samplerbox.py

[SAMPLERBOX CONFIG]
USE_TONECONTROL = False
CHANNELS = 2
SAMPLERATE = 44100
MIXER_CARD_ID = -1
USE_FREEVERB = False
USE_HD44780_20X4_LCD = False
MAX_POLYPHONY = 80
RAM_LIMIT_PERCENTAGE = 40
MIXER_CONTROL = Speaker
AUDIO_DEVICE_ID = -1
USE_SERIALPORT_MIDI = False
USE_ALSA_MIXER = False
SYSTEM_MODE = 1
USE_HD44780_16X2_LCD = True
SAMPLES_DIR = ./media
USE_I2C_7SEGMENTDISPLAY = False
USE_GUI = False
GLOBAL_VOLUME = 100
MIDI_CHANNEL = 1
AUDIO_DEVICE_NAME = autodetect
BOXRELEASE = 30
USE_BUTTONS = True
BUFFERSIZE = 64
PRESET_BASE = 0

[MISC]
; Outputs LCD messages to the console on a single line. Line breaks are represented by a double pipe: || ; Outputs MIDI messages to the console in this format: messagetype, note <DeviceName>. eg 176, 60, <LaunchKey 61>
PRINT_LCD_MESSAGES = True
PRINT_MIDI_MESSAGES = True

[MIDI BUTTON NAVIGATION FOR SYSTEM MODE 1]
; Assign MIDI controls or notes to menu navigation in system mode 1.; MIDI message + device: with print_midi_messages set to True, you can see what messages your device is sending.; eg button_left = 176, 60, <LaunchKey 61> (<devicename> is optional) ; Can use keyboard notes as navigation. This is not ideal, but useable if you have no alternative.; eg button_left = F#2, <microKEY-61> (<devicename> is optional)
BUTTON_CANCEL_MIDI = undefined
BUTTON_ENTER_MIDI = undefined
BUTTON_RIGHT_MIDI = undefined
BUTTON_LEFT_MIDI = undefined

[MIDI BUTTON NAVIGATION FOR SYSTEM MODE 2]
; Assign MIDI controls or notes to menu navigation in system mode 2.; MIDI message + device: with print_midi_messages set to True, you can see what messages your device is sending.; eg button_left = 176, 60, <LaunchKey 61> (<devicename> is optional) ; Can use keyboard notes as navigation. This is not ideal, but useable if you have no alternative.; eg button_left = F#2, <microKEY-61> (<devicename> is optional)
BUTTON_FUNC_MIDI = undefined
BUTTON_UP_MIDI = undefined
BUTTON_DOWN_MIDI = undefined

[GPIO BUTTONS PIN SETUP FOR SYSTEM MODE 1]
; GPIO: The number of the GPIO pin the button is connected to. eg button_left = GPIO7; For buttons connected to GPIO pins, USE_BUTTONS must be True
BUTTON_CANCEL_GPIO = 12
BUTTON_LEFT_GPIO = 26
BUTTON_RIGHT_GPIO = 13
BUTTON_ENTER_GPIO = 6

[GPIO BUTTONS PIN SETUP FOR SYSTEM MODE 2]
; GPIO: The number of the GPIO pin the button is connected to. eg button_left = GPIO7; For buttons connected to GPIO pins, USE_BUTTONS must be True
BUTTON_DOWN_GPIO = 26
BUTTON_FUNC_GPIO = 6
BUTTON_UP_GPIO = 13

[GPIO LCD HD44780 PIN SETUP]
; If you're using a 16x2 or 20x4 character LCD module, define its GPIO pins here
GPIO_LCD_RS = 7
GPIO_LCD_E = 8
GPIO_LCD_D7 = 4
GPIO_LCD_D6 = 18
GPIO_LCD_D5 = 17
GPIO_LCD_D4 = 27

[GPIO FOR A 7 SEGMENT DISPLAY]
; If you're using a 7 segment display, define its GPIO pin here
GPIO_7SEG = 1

